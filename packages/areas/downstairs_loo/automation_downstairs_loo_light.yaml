automation:
  - id: downstairs_loo_light
    alias: 'Downstairs Loo Light from Door and occupancy'
    
    description:  >-
      Downstairs Loo Door controlled by door and occupancy sensor

    mode: restart
    trigger: 
      - platform: homeassistant
 #       id: "homeassistant start"
        event: start
      - platform: event
#        id: "automation reloaded"
        event_type: automation_reloaded    
      - platform: state
        entity_id: binary_sensor.downstairs_toilet_door
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.downstairs_loo
      - platform: state
        entity_id: binary_sensor.downstairs_toilet_sensor_motion
        to: 'on'

    action:
      - choose:
            # Restart or automation Reload
          - alias: "Restart or Automation Reload"
            conditions: "{{ trigger.platform == 'homeassistant' or (trigger.platform == 'event' and trigger.event_type == 'automation_reloaded') }}"
            sequence:
              - alias: "Set occupied off"            
                service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.room_occupied_downstairs_loo  

              - alias: "start timer"                    
                service: timer.start
                target:
                  entity_id: timer.downstairs_loo                   
                
            # Closed
          - alias: "Closed"            
            conditions: "{{ trigger.entity_id == 'binary_sensor.downstairs_toilet_door' and trigger.to_state.state == 'off' }}"
            sequence:
              - alias: "Light on"              
                service: light.turn_on
                target:
                 entity_id: light.downstairs_toilet_light
                data:
                  brightness: 255

              - alias: "start timer"                   
                service: timer.start
                target:
                  entity_id: timer.downstairs_loo

              - alias: "Wait for motion for 10 seconds"                                     
                wait_template: "{{ is_state('binary_sensor.downstairs_toilet_sensor_motion', 'on') }}"
                timeout: '00:00:10'
                continue_on_timeout: false

              - alias: "Set Occuped on"                  
                service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.room_occupied_downstairs_loo    
              
            # Else opened and dark
          - alias: "Opened and Dark"            
            conditions: "{{ trigger.entity_id=='binary_sensor.downstairs_toilet_door' and trigger.to_state.state == 'on' and states('sensor.downstairs_toilet_illuminance') | float < 50.0 }}"
            sequence:
              - alias: "start timer"             
                service: timer.start
                target:
                  entity_id: timer.downstairs_loo

              - alias: "Set Occupied off"                                     
                service: input_boolean.turn_off
                target:
                  entity_id: input_boolean.room_occupied_downstairs_loo
                  
              - alias: "Light on"                                     
                service: light.turn_on
                target:
                  entity_id: light.downstairs_toilet_light
              
            # Timer finished and door opened
          - alias: "Timer finished and door opened"            
            conditions: "{{ trigger.event.data.entity_id=='timer.downstairs_loo' and states('binary_sensor.downstairs_toilet_door') == 'on' }}"
            sequence:
              - alias: "Light Off"                
                service: light.turn_off
                target:
                  entity_id: light.downstairs_toilet_light   
                data:
                  transition: 10
                
            # Movement - alarm not set - door closed
          - alias: "Alarm not set - door closed"              
            conditions: "{{ trigger.entity_id=='binary_sensor.downstairs_toilet_sensor_motion' and states('binary_sensor.downstairs_toilet_door') == 'off' and states('sensor.downstairs_toilet_illuminance') | float < 50.0 and states('alarm_control_panel.texecom') != 'armed_away' }}"
            sequence:     
              - alias: "Light On"             
                service: light.turn_on
                target:
                  entity_id: light.downstairs_toilet_light
                data:
                  brightness: 255

              - alias: "Set Occupied on"                   
                service: input_boolean.turn_on
                target:
                  entity_id: input_boolean.room_occupied_downstairs_loo   

              - alias: "Timer Start"                   
                service: timer.start
                target:
                  entity_id: timer.downstairs_loo       
              
            # Movement - alarm not set - and dark
          - alias: "Movement - alarm not set- and dark"              
            conditions: "{{ trigger.entity_id == 'binary_sensor.downstairs_toilet_sensor_motion' and states('sensor.downstairs_toilet_illuminance') | float  < 50.0 and states('alarm_control_panel.texecom') != 'armed_away' }}"
            sequence:  
              - alias: "Downstairs Toilet Light On"          
                service: light.turn_on
                target:
                  entity_id: light.downstairs_toilet_light
                data:
                  brightness: 255

              - alias: "Timer Start"                  
                service: timer.start
                target:
                  entity_id: timer.downstairs_loo      
        
        # unknown
        default:
          - alias: "unknown situation occurred - turn off occupied"
            service: input_boolean.turn_off
            target:
              entity_id: input_boolean.room_occupied_downstairs_loo
              
          - alias: "unknown situation occurred - Start Timer"              
            service: timer.start
            target:
              entity_id: timer.downstairs_loo        